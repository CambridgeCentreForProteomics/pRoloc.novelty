context("Machine learning tests")

data(dunkley2006)
d2 <- d1 <- dunkley2006
fvarLabels(d2)[1] <- "xx"
  
.times <- 2
.seed <- 1

test_that("knn consistency", {
  reg1.knn <- knnRegularisation(d1, fcol = "markers",
                                times = .times, seed = .seed, verbose = FALSE)
  reg2.knn <- knnRegularisation(d2, fcol = "xx",
                                times = .times, seed = .seed, , verbose = FALSE)
  expect_equal(reg1.knn, reg2.knn)  
  ans1.knn <- knnPrediction(d1, reg1.knn, fcol = "markers")
  ans2.knn <- knnPrediction(d2, reg1.knn, fcol = "xx")
  expect_true(all(fData(ans1.knn) == fData(ans2.knn)))
})


test_that("svm consistency", {
  reg1.svm <- svmRegularisation(d1, fcol = "markers",
                                times = .times, seed = .seed, verbose = FALSE)
  reg2.svm <- svmRegularisation(d2, fcol = "xx",
                                times = .times, seed = .seed, verbose = FALSE)
  expect_equal(reg1.svm, reg2.svm)  
  ans1.svm <- svmPrediction(d1, reg1.svm, fcol = "markers")
  ans2.svm <- svmPrediction(d2, reg1.svm, fcol = "xx")
  expect_true(all(fData(ans1.svm) == fData(ans2.svm)))
})

test_that("nb consistency", {
  reg1.nb <- nbRegularisation(d1, fcol = "markers",
                              times = .times, seed = .seed,
                              verbose = FALSE)
  reg2.nb <- nbRegularisation(d2, fcol = "xx",
                              times = .times, seed = .seed,
                              verbose = FALSE)
  expect_equal(reg1.nb, reg2.nb)  
  ans1.nb <- nbPrediction(d1, reg1.nb, fcol = "markers")
  ans2.nb <- nbPrediction(d2, reg1.nb, fcol = "xx")
  expect_true(all(fData(ans1.nb) == fData(ans2.nb)))
})

test_that("plsda consistency", {
  reg1.pls <- plsdaRegularisation(d1, fcol = "markers",
                                  times = 1, seed = .seed,
                                  verbose = FALSE)
  reg2.pls <- plsdaRegularisation(d2, fcol = "xx",
                                  times = 1, seed = .seed,
                                  verbose = FALSE)
  expect_equal(reg1.pls, reg2.pls)  
  ans1.pls <- plsdaPrediction(d1, reg1.pls, fcol = "markers")
  ans2.pls <- plsdaPrediction(d2, reg1.pls, fcol = "xx")
  expect_true(all(fData(ans1.pls) == fData(ans2.pls)))
})


test_that("nnet consistency", {
  reg1.nnet <- nnetRegularisation(d1, fcol = "markers",
                                  times = .times, seed = .seed,
                                  verbose = FALSE)
  reg2.nnet <- nnetRegularisation(d2, fcol = "xx",
                                  times = .times, seed = .seed,
                                  verbose = FALSE)
  expect_equal(reg1.nnet, reg2.nnet)
  set.seed(.seed)
  ans1.nnet <- nnetPrediction(d1, reg1.nnet, fcol = "markers")
  set.seed(.seed)
  ans2.nnet <- nnetPrediction(d2, reg1.nnet, fcol = "xx")
  expect_true(all(fData(ans1.nnet) == fData(ans2.nnet)))
})

test_that("rf consistency", {
  reg1.rf <- rfRegularisation(d1, fcol = "markers",
                              times = .times, seed = .seed,
                              verbose = FALSE)
  reg2.rf <- rfRegularisation(d2, fcol = "xx",
                              times = .times, seed = .seed,
                              verbose = FALSE)
  expect_equal(reg1.rf, reg2.rf)
  set.seed(.seed)
  ans1.rf <- rfPrediction(d1, reg1.rf, fcol = "markers")
  set.seed(.seed)
  ans2.rf <- rfPrediction(d2, reg1.rf, fcol = "xx")  
  expect_true(all(fData(ans1.rf) == fData(ans2.rf)))
})

test_that("ksvm consistency", {
  reg1.ksvm <- ksvmRegularisation(d1, fcol = "markers",
                                  times = .times, seed = .seed,
                                  verbose = FALSE)
  reg2.ksvm <- ksvmRegularisation(d2, fcol = "xx",
                                  times = .times, seed = .seed,
                                  verbose = FALSE)
  expect_equal(reg1.ksvm, reg2.ksvm)
  set.seed(.seed)
  ans1.ksvm <- ksvmPrediction(d1, reg1.ksvm, fcol = "markers")
  set.seed(.seed)
  ans2.ksvm <- ksvmPrediction(d2, reg1.ksvm, fcol = "xx")  
  expect_true(all(fData(ans1.ksvm) == fData(ans2.ksvm)))
})


test_that("mbl consistency", {
  ans1 <- mblPrediction(d1, fcol = "markers",
                        seed = .seed,
                        times = .times, verbose = FALSE)
  ans2 <- mblPrediction(d2, fcol = "xx",
                        seed = .seed,
                        times = .times, verbose = FALSE)
  expect_true(all(fData(ans1) == fData(ans2)))
})
